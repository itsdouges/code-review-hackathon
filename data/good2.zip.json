{"files": [{"comment": "0", "fileextention": "json", "code": "23", "hash": "417a6aa96326cea32590602a85764382", "averagelinelength": 17, "effortmonths": 0, "duplicates": [], "blank": "2", "estimatedcost": 0, "filename": "package.json", "content": "{\n  \"name\": \"movie_filter\",\n  \"version\": \"0.0.1\",\n  \"description\": \"exercise http server\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\",\n    \"test\": \"node test/filterTest.js\" \n  },\n  \"dependencies\": {\n    \"express\": \"~4.9.x\",\n    \"body-parser\": \"1.12.x\",\n    \"underscore\": \"1.8.x\"\n  },\n\n  \"devDependencies\": { \"test\": \">=0.0.5\" },\n\n  \"engines\": {\n    \"node\": \"0.12.x\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@heroku.com:movies-filters.git\"\n  }\n}\n", "filescount": "1", "linescount": 26, "location": "", "effortyears": 0, "languagename": "JSON", "estimateddevelopers": 0, "technologies": []}, {"comment": "0", "fileextention": "Procfile", "code": "0", "hash": "5141ba2ac3f108083c5b3cd73808924a", "averagelinelength": 9, "effortmonths": 0, "duplicates": [], "blank": "0", "estimatedcost": 0, "filename": "Procfile", "content": "web: node index.js\n", "filescount": "0", "linescount": 2, "location": "", "effortyears": 0, "languagename": "Unknown", "estimateddevelopers": 0, "technologies": []}, {"comment": "0", "fileextention": "gitignore", "code": "3", "hash": "446dcda8d54b473d528e5d34a8f878b5", "averagelinelength": 6, "effortmonths": 0, "duplicates": [{"sourceurl": "https://github.com/lzyzsd/PathFinding.js", "language": "Git Ignore", "md5hash": "b5dcbf3514b51bcd552492320a88207c", "filename": ".gitignore", "source": "Github", "linescount": 3, "reponame": "PathFinding.js", "id": 75824994, "location": ""}, {"sourceurl": "https://github.com/metavida/forecast-io-translations", "language": "Git Ignore", "md5hash": "dae56c948b4bcaef8579071e92e61716", "filename": ".gitignore", "source": "Github", "linescount": 3, "reponame": "forecast-io-translations", "id": 92277749, "location": ""}, {"sourceurl": "https://github.com/Ribeiro/node-xml2js", "language": "Git Ignore", "md5hash": "924ef28a67ce72a266ca62f407a5acc4", "filename": ".gitignore", "source": "Github", "linescount": 3, "reponame": "node-xml2js", "id": 95703417, "location": ""}, {"sourceurl": "https://github.com/mitar/node-xml2js", "language": "Git Ignore", "md5hash": "924ef28a67ce72a266ca62f407a5acc4", "filename": ".gitignore", "source": "Github", "linescount": 3, "reponame": "node-xml2js", "id": 96599781, "location": ""}], "blank": "0", "estimatedcost": 0, "filename": ".gitignore", "content": "*.swp\nnode_modules/*\n", "filescount": "1", "linescount": 3, "location": "", "effortyears": 0, "languagename": "Git Ignore", "estimateddevelopers": 0, "technologies": []}, {"comment": "0", "fileextention": "js", "code": "11", "hash": "d9c0fcfa6b059da3ab713a34a6dab288", "averagelinelength": 25, "effortmonths": 0, "duplicates": [], "blank": "3", "estimatedcost": 0, "filename": "filter.js", "content": "var _ = require('underscore');\n\nvar isProperMovie = function(movie) {\n  return movie.drm && movie.episodeCount > 0;\n}\n\nvar convert = function(movie) {\n  return _.extend({\"image\": movie.image.showImage}, _.pick(movie, 'slug', 'title'));\n}\n\nexports.process = function(inputJSON) {\n  var filtered = _.filter(inputJSON.payload, isProperMovie);\n  return {\"response\": _.map(filtered, convert)};\n}\n", "filescount": "1", "linescount": 15, "location": "", "effortyears": 0, "languagename": "Javascript", "estimateddevelopers": 0, "technologies": ["Underscore.js"]}, {"comment": "0", "fileextention": "js", "code": "20", "hash": "d3bcc316c1d0faa8c6266dcc1da48a8c", "averagelinelength": 27, "effortmonths": 0, "duplicates": [], "blank": "3", "estimatedcost": 0, "filename": "index.js", "content": "var express = require('express');\nvar filter  = require('./filter.js');\nvar app = express();\nvar bodyParser = require('body-parser');\napp.use(bodyParser.json({strict: false}));\napp.use(function(ex, request, response, next) {\n  console.log(ex.message);\n  if(ex instanceof SyntaxError) {\n    response.status(400).json({error: \"Could not decode request: \" + ex.message});\n  } else {\n    response.status(400).end();\n  }\n});\n\napp.set('port', (process.env.PORT || 5000));\n\napp.post('/', function(request, response){\n  response.send(filter.process(request.body));  \t\n});\n\napp.listen(app.get('port'), function() {\n  console.log(\"App is running at port: \" + app.get('port'));\n});\n", "filescount": "1", "linescount": 24, "location": "", "effortyears": 0, "languagename": "Javascript", "estimateddevelopers": 0, "technologies": []}, {"comment": "0", "fileextention": "json", "code": "16", "hash": "3ba40f1eec18535824d317c4f7ef07a1", "averagelinelength": 15, "effortmonths": 0, "duplicates": [], "blank": "0", "estimatedcost": 0, "filename": "testRequest.json", "content": "{ \"payload\": [\n  {\n    \"drm\": true,\n    \"episodeCount\": 3,\n    \"image\": {\n      \"showImage\": \"http://test.url/image.jpg\"\n    },\n    \"slug\": \"show\",\n    \"title\": \"Toy Hunter\"\n  },\n  {\n    \"slug\": \"show/seapatrol\",\n    \"title\": \"Sea Patrol\",\n    \"tvChannel\": \"Channel 9\"\n  }\n]}\n", "filescount": "1", "linescount": 17, "location": "/test", "effortyears": 0, "languagename": "JSON", "estimateddevelopers": 0, "technologies": []}, {"comment": "0", "fileextention": "js", "code": "12", "hash": "50777cb77d1b176634c01b8bf0b9114c", "averagelinelength": 40, "effortmonths": 0, "duplicates": [], "blank": "2", "estimatedcost": 0, "filename": "filterTest.js", "content": "var assert = require('assert');\nvar filter = require('../filter');\nvar fs     = require('fs');\n\nexports['test filter.process'] = function(assert) {\n  var inputObj = JSON.parse(fs.readFileSync('./test/testRequest.json'));\n  var outputObj = filter.process(inputObj);  \n  assert.equal(outputObj.response.length, 1, 'array filtered');\n  assert.equal(outputObj.response[0].title, 'Toy Hunter', 'title set');\n  assert.equal(outputObj.response[0].slug, 'show', 'slug set');\n  assert.equal(outputObj.response[0].image, 'http://test.url/image.jpg', 'image url set');\n}\n \nif (module == require.main) require('test').run(exports);\n", "filescount": "1", "linescount": 15, "location": "/test", "effortyears": 0, "languagename": "Javascript", "estimateddevelopers": 0, "technologies": ["Assert", "JSON"]}], "totalcost": 0, "description": "Mostly written in Javascript. Code contains the following JSON (28%), Javascript (42%), Git Ignore (14%). Using the following technologies Assert, Underscore.js, JSON. It has a git/mercural ignore file. It appears to be concice. It has unit tests. It is using underscore.js", "spdx": "##-------------------------\n## SPDX Document Information\n##-------------------------\nSPDXVersion: SPDX-1.2\nDataLicense: CC-BY-4.0\n\n##-------------------------\n## Creation Information\n##-------------------------\nCreator: ubuntu\nCreator: Tool: TripleCheck 0.9.6\nCreated: 2015-05-15T01:27:24Z\n\n##-------------------------\n## Package Information\n##-------------------------\nPackageName: Package\nPackageDownloadLocation: zip\n\n##-------------------------\n## File Information\n##-------------------------\nFileName: ./package.json\nFileType: OTHER\nFileChecksum: SHA1: 5427a1cfea529076389417c66473b69bf641d205\nFileChecksum: SHA256: 9c9ac83ed1ef1144267866fe4b9513de3bec67a2a0b74f16b0cca5dd88993f99\nFileChecksum: MD5: 417a6aa96326cea32590602a85764382\nFileChecksum: SSDEEP: 12:U1ee6a9uaXV+B4e+F30WIFha2jauPFGJObm3:U1epOnVINuuPFA3\nFileSize: 484 bytes\n\nFileName: ./Procfile\nFileType: OTHER\nFileChecksum: SHA1: f22f7511f74fa30a3d7ed90a1021cedb549591a8\nFileChecksum: SHA256: dbf927feb8ccf7b776ce559b2b7fc1f221aa9c44377ef2265cb65b6f78120aee\nFileChecksum: MD5: 5141ba2ac3f108083c5b3cd73808924a\nFileChecksum: SSDEEP: 3:Lfa47o:LB7o\nFileSize: 19 bytes\n\nFileName: ./test/testRequest.json\nFileType: OTHER\nFileChecksum: SHA1: de8899738b307b8fac4c3a0991225a12d780472d\nFileChecksum: SHA256: 11b8b1865f69ccc3a475f43a5c9920d84787b0c3ca9fecfe905964ea8b99c30e\nFileChecksum: MD5: 3ba40f1eec18535824d317c4f7ef07a1\nFileChecksum: SSDEEP: 6:a11JfZFQJtp4mTNFgmB+GNiwKtEC1iL0J+/iMneXJbRX0MM0EPNEIJyLI2:eJfZFQjp4wXgmBAif/YpROPWBb\nFileSize: 276 bytes\n\nFileName: ./test/filterTest.js\nFileType: SOURCE\nFileChecksum: SHA1: 838c6d7b3ae4b3bb41c701ab6dd3c3b70f0295d1\nFileChecksum: SHA256: d4becb27c252ee6b40aceda803ef16454b44a2c39048906775da6adf400271ec\nFileChecksum: MD5: 50777cb77d1b176634c01b8bf0b9114c\nFileChecksum: SSDEEP: 12:oMzpzK80o4QcFFHWzb5RMxkl1eVnklomNrDu8C9gMcK:oMzJK80ecFFHqb52alakldNrDuF7r\nFileSize: 620 bytes\nFileLOC: 13\n\nFileName: ./.gitignore\nFileType: OTHER\nFileChecksum: SHA1: 66cea2570b615d1f14e1a13fb45eaaecab95dc4f\nFileChecksum: SHA256: 7127f396a3d0d113c5ae1096b2e4ed3672b3b1172c05875206bbd9e94acab5bb\nFileChecksum: MD5: 446dcda8d54b473d528e5d34a8f878b5\nFileChecksum: SSDEEP: 3:vKBgwX:vE\nFileSize: 21 bytes\n\nFileName: ./filter.js\nFileType: SOURCE\nFileChecksum: SHA1: 964ba0a04049428d3a12184464ed2074aa8dc5ea\nFileChecksum: SHA256: 6c8a0f087f239aef47a442d12edf31e451027e8f78a4196e5db1d54cf509bb08\nFileChecksum: MD5: d9c0fcfa6b059da3ab713a34a6dab288\nFileChecksum: SSDEEP: 12:PB40hWEXAj4TW7doWNsysCQzaBNfuVMCn:Pe0hhXAUTIdevOBxkMCn\nFileSize: 391 bytes\nFileLOC: 11\n\nFileName: ./.spdx\nFileType: OTHER\nFileChecksum: SHA1: da39a3ee5e6b4b0d3255bfef95601890afd80709\nFileChecksum: SHA256: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nFileChecksum: MD5: d41d8cd98f00b204e9800998ecf8427e\nFileChecksum: SSDEEP: 3::\nFileSize: 0 bytes\n\nFileName: ./index.js\nFileType: SOURCE\nFileChecksum: SHA1: 9d83a557a3915d11b8578cd9731d417b0296c811\nFileChecksum: SHA256: 6d778db6bd63ffce37168edd92e9b212b56028648d431490dc5be263ed670c3b\nFileChecksum: MD5: d3bcc316c1d0faa8c6266dcc1da48a8c\nFileChecksum: SSDEEP: 12:sFczimbO8FmMJJ09RjQviGbWY/PgojARjypI/PyGMc14iPgAjFNv9/VYkFkwv:sFUimbO8FmMJJQwiGbWY/Yoj0+pI/qOt\nFileSize: 671 bytes\nFileLOC: 20\n\n", "totalcomments": 0, "rank": "A", "rankingscore": 50, "reccomendedteams": ["Network", "Jump-in", "Video"], "mainlanguage": "Javascript", "totallines": 102, "breakdown": ["JSON (28%)", "Javascript (42%)", "Git Ignore (14%)"], "technologylist": ["Assert", "Underscore.js", "JSON"], "totalcode": 85}
